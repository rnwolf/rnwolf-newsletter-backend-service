{
  "name": "rnwolf-newsletter-backend-service",
  "version": "1.0.0",
  "description": "API backend service for newsletter subscription management",
  "main": "src/index.ts",
  "directories": {
    "doc": "docs",
    "test": "tests"
  },
  "scripts": {
    "dev": "wrangler dev --env local",
    "dev:remote": "wrangler dev --env local --remote",
    "deploy:staging": "wrangler deploy --env staging",
    "deploy:production": "wrangler deploy --env production",
    "deploy:staging:full": "./scripts/deploy.sh staging",
    "deploy:production:full": "./scripts/deploy.sh production",
    "deploy:quick": "./scripts/quick-deploy.sh",
    "deploy:cleanup": "./scripts/deploy.sh production --cleanup-only",
    "test": "vitest run tests/api.test.ts tests/unsubscribe.test.ts tests/integration.test.ts tests/email-verification-endpoint.test.ts",
    "test:watch": "vitest tests/api.test.ts tests/unsubscribe.test.ts tests/integration.test.ts",
    "test:unit": "vitest run tests/api.test.ts tests/unsubscribe.test.ts tests/email-verification.test.ts",
    "test:integration": "vitest run tests/integration.test.ts tests/email-verification-integration.test.ts",
    "test:local": "TEST_ENV=local vitest run tests/api.test.ts tests/unsubscribe.test.ts tests/integration.test.ts",
    "test:staging": "TEST_ENV=staging vitest run --config vitest.smoke.config.ts tests/smoke-remote.test.ts --reporter=verbose",
    "test:production": "TEST_ENV=production vitest run --config vitest.smoke.config.ts tests/smoke-remote.test.ts --reporter=verbose",
    "test:queue": "vitest run tests/queue-processing.test.ts",
    "test:metrics": "vitest run tests/metrics.test.ts",
    "test:metrics:local": "TEST_ENV=local vitest run tests/metrics.test.ts",
    "test:metrics:staging": "TEST_ENV=staging vitest run tests/metrics.test.ts",
    "test:metrics:production": "TEST_ENV=production vitest run tests/metrics.test.ts",
    "validate:metrics": "./scripts/metrics-validation.sh production",
    "validate:metrics:staging": "./scripts/metrics-validation.sh staging",
    "test:staging:workers": "TEST_ENV=staging vitest run tests/api.test.ts tests/unsubscribe.test.ts tests/integration.test.ts",
    "test:production:workers": "TEST_ENV=production vitest run tests/api.test.ts tests/unsubscribe.test.ts tests/integration.test.ts",
    "test:smoke:staging": "TEST_ENV=staging vitest run --config vitest.smoke.config.ts tests/smoke-remote.test.ts --reporter=verbose",
    "test:smoke:production": "TEST_ENV=production vitest run --config vitest.smoke.config.ts tests/smoke-remote.test.ts --reporter=verbose --bail=1",
    "test:health:staging": "curl -s https://api-staging.rnwolf.net/health | jq .",
    "test:health:production": "curl -s https://api.rnwolf.net/health | jq .",
    "test:all-envs": "npm run test:local && npm run test:staging",
    "test:performance": "TEST_ENV=local vitest run tests/performance.test.ts",
    "test:performance:staging": "TEST_ENV=staging vitest run tests/performance.test.ts",
    "test:performance:production": "TEST_ENV=production vitest run tests/performance.test.ts --reporter=verbose",
    "test:load": "npm run test:performance",
    "metrics:local": "curl -H 'Authorization: Bearer local-test-key' http://localhost:8787/metrics/json",
    "metrics:staging": "curl -H 'Authorization: Bearer $GRAFANA_API_KEY' https://api-staging.rnwolf.net/metrics/json",
    "metrics:production": "curl -H 'Authorization: Bearer $GRAFANA_API_KEY' https://api.rnwolf.net/metrics/json",
    "test:email-verification:full": "vitest run tests/email-verification.test.ts tests/email-verification-integration.test.ts tests/queue-processing.test.ts",
    "test:email-verification:unit": "vitest run tests/email-verification.test.ts",
    "test:email-verification:integration": "vitest run tests/email-verification-integration.test.ts",
    "test:email-verification:queue": "vitest run tests/queue-processing.test.ts",
    "db:migrate:local": "wrangler d1 execute DB --env local --file=./migrations/001_initial_schema.sql",
    "db:migrate:staging": "wrangler d1 execute DB --env staging --remote --file=./migrations/001_initial_schema.sql",
    "db:migrate:production": "wrangler d1 execute DB --env production --remote --file=./migrations/001_initial_schema.sql",
    "db:migrate:verification:local": "wrangler d1 execute DB --env local --file=./migrations/002_add_email_verification.sql",
    "db:migrate:verification:staging": "wrangler d1 execute DB --env staging --remote --file=./migrations/002_add_email_verification.sql",
    "db:migrate:verification:production": "wrangler d1 execute DB --env production --remote --file=./migrations/002_add_email_verification.sql",
    "db:migrate:all:local": "npm run db:migrate:local && npm run db:migrate:verification:local",
    "db:migrate:all:staging": "npm run db:migrate:staging && npm run db:migrate:verification:staging",
    "db:migrate:all:production": "npm run db:migrate:production && npm run db:migrate:verification:production",
    "db:reset:local": "./scripts/apply-reset-migration.sh local",
    "db:reset:staging": "./scripts/apply-reset-migration.sh staging",
    "db:reset:production": "./scripts/apply-reset-migration.sh production",
    "db:verify:local": "./scripts/verify-email-verification-schema.sh local",
    "db:verify:staging": "./scripts/verify-email-verification-schema.sh staging",
    "db:verify:production": "./scripts/verify-email-verification-schema.sh production",
    "test:email-verification": "./scripts/run-email-verification-tdd.sh",
    "test:email-verification:watch": "./scripts/run-email-verification-tdd.sh --watch",
    "db:verify:schema": "./scripts/verify-schema.sh",
    "test:verification": "vitest run tests/verification.test.ts",
    "type-check": "tsc --noEmit",
    "lint": "echo 'Add linting when ready'"
  },
  "keywords": [
    "cloudflare-workers",
    "newsletter",
    "api",
    "d1",
    "turnstile"
  ],
  "author": "Rudiger Wolf",
  "license": "MIT",
  "dependencies": {
    "@cloudflare/workers-types": "^4.20250531.0",
    "@opentelemetry/api": "^1.9.0"
  },
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "^0.8.34",
    "@opentelemetry/api": "^1.7.0",
    "@types/node": "^22.15.29",
    "typescript": "^5.8.3",
    "vitest": "^3.1.4",
    "wrangler": "^4.20.0"
  }
}
